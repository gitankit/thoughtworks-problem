Repository to track thoughtworks problem statement
Author: Ankit Sharma <findme.ankit@gmail.com>

Directory Index
=====================================================================================================
README -- This File
terraform -- Contains infra provisioning and setup code
test.sh -- Contains basic test cases for the application


Terraform
=====================================================================================================
Terraform is used to create infra (ec2 , alb , vpc etc) on AWS cloud and then terarform provisioners 
called to setup the aplication inside instance.

You can download terraform from : https://www.terraform.io/downloads.html
Terraform version: 0.11.11 (Please use the same version as mentioned)



Terraform Modules
=====================================================================================================
app       -- Contains dynamic application instances with tomcat and web application (war files).
static    -- Contains static instances with static files (images , styles)
common    -- Contains common componenets to facilitate setup. (Bastion server , load balancer , ssl certificate)
vpc       -- Contains VPC componenets. (VPC , Internet gateway , nat gateway , subnets , route tables)
confs     -- Contains tomcat configuration files.
keys      -- Contains RSA keys for ssh access.
artifacts -- Contains deployable componenets like war files , static images and css.


How to Run
======================================================================================================
1. Install terraform.
2. Get IAM access credentials or if using from AWS instance then permission to create , update , list and 
delete following resources should be provided:
EC2 , ALB , VPC , ACM , EIP
3. Clone the repository
4. Get inside the cloned-repo-folder(thoughtworks-problem)->terraform.
5. Run terraform init
6. Run terraform plan --> This will display a plan and 52 resources to be created. This will also ask
for aws credentials interactively. 
7. Run terraform apply

More
----------------------
8. You will get dns_name_application and bastion_ip_address as output after the terraform in (7) ran 
successfully. 
9. Browse to the url to use the application. You will have to add exception for the certificate as it is
self signed.
10. (Optional) If you want to check the config inside servers then login to bastion ip provided in (8)
using the private key in terraform->keys folder.
11. From bastion you can access respective application / static instances. [ ssh <private-ip-addr> ]


Known Issues
======================================================================================================
1. Make sure your resource limits for VPC , EC2 , Elastic IPs are enough.
2. If terraform apply fails due to timeout then rerun terraform apply and it will again apply the 
remaining changes. This fail might happed due to network issues.
3. For AWS credentials either enter them interactively or export them in the environment.

Change Defaults
=======================================================================================================
1. Most of the default set are in accordance with the application.
2. Variables defined and set inside terraform->variables.tf can be changed without any issues.
3. Module specific parameters can be changed in module definition in terraform->main.tf





